classDiagram
direction TB
    class Usuario {
	    - nome: String
	    - login: String
	    - senhaHash: String
	    - credenciais: List~Credencial~
	    + getNome() String
	    + setNome(String) void
	    + getLogin() String
	    + setLogin(String) void
	    + getSenhaHash() String
	    + adicionarCredencial(Credencial) void
	    + getCredenciais() List~Credencial~
	    + alterarSenha(String, String) boolean
	    + verificarSenha(String) boolean
    }

    class Credencial {
	    - servico: String
	    - usuario: Usuario
	    - senha: String
	    - url: String
	    - categorias: Set~Categoria~
	    + getServico() String
	    + setServico(String) void
	    + getUsuario() Usuario
	    + setUsuario(Usuario) void
	    + getSenha() String
	    + setSenha(String) void
	    + getUrl() String
	    + setUrl(String) void
	    + getCategorias() Set~Categoria~
	    + adicionarCategoria(Categoria) void
	    + removerCategoria(Categoria) boolean
	    + getEntropia() double
    }

    class Categoria {
	    - nome: String
	    - credenciais: Set~Credencial~
	    - todasCategorias: List~Categoria~
	    + adicionarCredencial(Credencial) void
	    + removerCredencial(Credencial) void
	    + removerCategoria(String) boolean
	    + listarTodas() List~Categoria~
	    + buscarPorNome(String) Categoria
	    + getNome() String
	    + getCredenciais() Set~Credencial~
    }

    class GerenciadorUsuario {
	    - usuarios: List~Usuario~
	    + cadastrarUsuario(String, String, String) void
	    + existeLogin(String) boolean
	    + buscarUsuario(String) Usuario
	    + listarUsuarios() List~Usuario~
	    + atualizarUsuario(String, String) boolean
	    + removerUsuario(String) boolean
    }

    class Criptografia {
	    + gerarHash(String) String
	    + verificarHash(String, String) boolean
	    + gerarSenhaAleatoria(int) String
    }

    class Auditoria {
	    - registros: List~String~
	    + registrar(String, String) void
	    + getRegistros() List~String~
	    + limparRegistros() void
    }

    class ConfiguracaoSeguranca {
	    - tamanhoMinimoSenha: int
	    - exigirMaiusculas: boolean
	    - exigirMinusculas: boolean
	    - exigirNumeros: boolean
	    - exigirEspeciais: boolean
	    - diasExpiracaoSenha: int
	    - maxTentativasLogin: int
	    + getInstancia() ConfiguracaoSeguranca
	    + validarSenha(String) boolean
    }


    Usuario "1" --> "0..*" Credencial : Possui
    Credencial "n" --> "m" Categoria : Pertence
    Categoria "1" --> "0..*" Credencial : Contém
    GerenciadorUsuario "1" --> "0..*" Usuario : Gerencia
    Usuario ..> "1:1" Criptografia : Usa
    Usuario ..> "1:1" ConfiguracaoSeguranca : Consulta
    GerenciadorUsuario "1:1" ..> Auditoria : Registra
    Credencial ..> "1:1" Auditoria : Registra
    Categoria ..> "1:1" Auditoria : Registra
    ConfiguracaoSeguranca --* GerenciadorUsuario : Singleton (garante apenas uma instância. Acesso global a essa instância)


